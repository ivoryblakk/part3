{"version":3,"sources":["Filter.js","Form.js","Persons.js","services/contacts.js","Message.js","App.js","serviceWorker.js","index.js"],"names":["Filter","props","react_default","a","createElement","value","searchName","onChange","handleNameSearch","PersonForm","addPersonToPhonebook","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","shortid","require","Contact","name","number","deletePersonInPhonebook","id","Persons_DeletePerson","DeletePerson","_ref","onClick","Persons","showAll","copy","rows","map","c","Persons_Contact","key","generate","filter","indexOf","baseUrl","contacts","axios","get","then","response","data","newObject","post","delete","concat","Message","success","fail","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setSearchName","_useState9","_useState10","setShowAll","_useState11","_useState12","setMessage","_useState13","_useState14","errorMessage","setErrorMessage","toConsumableArray","dbPeronsHook","console","log","contactService","catch","err","useEffect","src_Message","Filter_Filter","event","target","Form","preventDefault","personObject","length","setTimeout","src_Persons","window","confirm","responce","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b84f5da.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Filter = (props) =>{\r\n    \r\n    return( \r\n       <div>\r\n        Search For Contact: <input value={props.searchName}  onChange={props.handleNameSearch}/>\r\n      </div> \r\n      )\r\n  }\r\n","\r\n  import React from 'react'\r\n\r\n  const PersonForm = (props) =>{\r\n    const {addPersonToPhonebook,newName, handleNameChange, newNumber, handleNumberChange} =props\r\n    return (     \r\n     <form onSubmit={addPersonToPhonebook}>\r\n       <div>\r\n         name: <input value={newName} onChange={handleNameChange} />\r\n       </div>\r\n       <div>\r\n         number: <input value={newNumber} onChange={handleNumberChange} />\r\n       </div>\r\n       <div>\r\n         <button type=\"submit\">add</button>\r\n       </div>\r\n     </form>\r\n     )\r\n }\r\n\r\n export default PersonForm","import React from 'react'\r\nconst shortid = require('shortid');\r\n\r\nconst Persons = (props) =>{\r\n    const {showAll,copy, searchName, deletePersonInPhonebook} = props\r\n    let rows =\"\"\r\n    //let searchArr = copy.filter( c => c.name.indexOf(searchName) > -1 />\r\n    if(showAll){\r\n      rows = copy.map( c => <Contact key={shortid.generate()} name={c.name} number={c.number} deletePersonInPhonebook={deletePersonInPhonebook} id={c.id}/>)\r\n    } else {\r\n      const searchArr = copy.filter( c => c.name.indexOf(searchName) > -1 )\r\n      rows = searchArr.map( c => <Contact key={shortid.generate()} name={c.name} number={c.number} deletePersonInPhonebook={deletePersonInPhonebook} id={c.id}/>)\r\n    }\r\n    return (\r\n      <div>\r\n        {rows}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Contact = props => {\r\n    const {name , number, deletePersonInPhonebook, id} = props\r\n    return <div> {name} {number} <DeletePerson deletePersonInPhonebook={deletePersonInPhonebook} id={id} name={name} /></div>;\r\n  }\r\n\r\n  const DeletePerson = ({deletePersonInPhonebook,id, name}) => {\r\n    return (  \r\n        <button onClick= {()=>{deletePersonInPhonebook(id, name)}}> delete </button>\r\n    )\r\n  }\r\n\r\n  export default Persons","/*jslint es6 */\r\nimport axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data)\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst remove = id  => {\r\n    //Get the id or name by filtering\r\n    // remove the perons selecte\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  //console.log(\"url link\",`${baseUrl}/${id}`)\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\nconst Message = props => {\r\n    const {success, fail} = props\r\n    let message =null\r\n    let style = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n      }\r\n\r\n    if( success === null  && fail == null){\r\n        let style ={}\r\n        message = () =>  <div style ={style}> </div>;\r\n    }else if( success !== null ){\r\n        message = () => <div style ={style}> {success}</div>;\r\n    }else if ( fail !== null ){\r\n        style.color = 'red'\r\n        message = () => <div style ={style}> {fail}</div>;\r\n    }else {\r\n        let style ={}\r\n        message = () =>  <div style ={style}> </div>;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {message()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message","/*eslint no-trailing-spaces: [\"error\", { \"ignoreComments\": true, \"skipBlankLines\": true }]*/\r\nimport React, { useState, useEffect } from 'react'\r\nimport {Filter} from './Filter'\r\nimport PersonForm from './Form'\r\nimport Persons from './Persons'\r\nimport contactService from './services/contacts'\r\n//import axios from 'axios'\r\nimport Message from './Message'\r\n//import {getAll, create, update, remove } from './services/contacts'\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState('')\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchName, setSearchName ] = useState('')\r\n  const [ showAll, setShowAll ] = useState(true)\r\n  const [ message, setMessage ] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  let copy = [...persons]\r\n\r\n  const dbPeronsHook = () => {\r\n    console.log('effect')\r\n    //  .get('http://localhost:3001/persons') changed  to hook up the backend\r\n    contactService.getAll().then(data =>{\r\n      console.log('get all ', data)\r\n      setPersons(data);\r\n        copy = [...data];\r\n    }).catch(err => console.log(\"err =\",err))\r\n  }\r\n\r\n  useEffect(dbPeronsHook, [])\r\n\r\n\r\n // console.log(\"Perons Arr\", persons)\r\n\r\n  const addPersonToPhonebook = (event) => {\r\n    dbPeronsHook()\r\n    event.preventDefault()\r\n    // Start  json server with | npx json-server --port 3001 --watch db.json\r\n    //if( isOnTheContactList().length >0 ){\r\n      // if(window.confirm(`${newName} is already added to the phonebook,\r\n      //  replace the old numer with the new one?`)){\r\n      //   const contact = isOnTheContactList()[0]\r\n      //   const changedContact = {...contact, number: newNumber }\r\n\r\n      //   contactService\r\n      //     .update(changedContact.id, changedContact)\r\n      //     .then(response => {\r\n      //       console.log(\"responce \", response)\r\n      //       setMessage(`Changed the number for ${newName}`)\r\n      //       setTimeout(() => {\r\n      //         setMessage(null)\r\n      //       }, 5000);\r\n      //     })\r\n      //     .catch(err => console.log(\"err =\",err))\r\n\r\n      //  }\r\n      // dbPeronsHook()\r\n     // return;\r\n    //}\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id: persons.length + 1,\r\n    }\r\n\r\n    contactService\r\n      .create(personObject)\r\n      .then(data => {\r\n        //setPersons(persons.concat(data))\r\n        setShowAll(true)\r\n       // dbPeronsHook()\r\n        setMessage(`Added ${newName}`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000);\r\n      }).catch(err =>{\r\n        setErrorMessage(`Something went wrong adding ${newName} to the phonebook`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000);\r\n        console.log(`This is the err ${err}`)\r\n      })\r\n  }\r\n\r\n  const deletePersonInPhonebook =(id, name) => {\r\n    if (window.confirm(`Do you really want delete ${name}` )){\r\n      contactService\r\n        .remove(id)\r\n        .then((responce) => {\r\n          setErrorMessage(`${name} has been removed from the phonebook`)\r\n          setTimeout(() => setErrorMessage(null), 5000);\r\n          dbPeronsHook()\r\n         })\r\n        .catch(err =>{\r\n          console.log(err)\r\n          setErrorMessage(`${name} has already been removed from the server`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000);\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  const isOnTheContactList =()=>{\r\n    return persons.filter(p => p.name === newName)\r\n  }\r\n\r\n\r\n/******************************************\r\n*\r\n*             Handelers\r\n*\r\n ******************************************/\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleNameSearch = event =>{\r\n    setSearchName(event.target.value)\r\n    if(event.target.value !== \"\"){\r\n      setShowAll(false)\r\n    }\r\n  }\r\n\r\n /******************************************\r\n *            Main Return\r\n ******************************************/\r\n\r\n  return (\r\n    \r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <Message success={message} fail={errorMessage} />\r\n        <Filter searchName={searchName} handleNameSearch={handleNameSearch}  />\r\n  \r\n        <h3>Add a new</h3>\r\n  \r\n        <PersonForm\r\n        addPersonToPhonebook ={addPersonToPhonebook}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n        />\r\n  \r\n        <h3>Numbers</h3>\r\n  \r\n        <Persons showAll={showAll} copy={copy} searchName={searchName}  deletePersonInPhonebook={deletePersonInPhonebook} />\r\n      </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}